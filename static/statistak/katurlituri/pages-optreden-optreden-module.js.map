{"version":3,"sources":["webpack:///./src/app/pages/optreden/optreden.module.ts","webpack:///./src/app/pages/optreden/optreden.page.html","webpack:///./src/app/pages/optreden/optreden.page.scss","webpack:///./src/app/pages/optreden/optreden.page.ts"],"names":[],"mappings":"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","file":"pages-optreden-optreden-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {OptredenPage} from './optreden.page';\nimport {SharedModule} from '../../shared/shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OptredenPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n  ],\n  declarations: [OptredenPage]\n})\nexport class OptredenPageModule {\n}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/tabs/optredens\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Optreden</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button (click)=\\\"delete()\\\">\\r\\n        <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n        Delete\\r\\n      </ion-button>\\r\\n      <ion-button (click)=\\\"update()\\\">\\r\\n        <ion-icon name=\\\"save\\\"></ion-icon>\\r\\n        Save\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <div *ngIf=\\\"optreden\\\">\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"stacked\\\">Locatie</ion-label>\\r\\n      <ion-input [(ngModel)]=\\\"optreden.locatie\\\" placeholder=\\\"Locatie\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"stacked\\\">Plaats</ion-label>\\r\\n      <ion-input [(ngModel)]=\\\"optreden.plaats\\\" placeholder=\\\"Plaats\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-segment [(ngModel)]=\\\"optreden.landCode\\\">\\r\\n      <ion-segment-button value=\\\"nl\\\">\\r\\n        <ion-label><span class=\\\"flag-icon flag-icon-nl\\\"></span></ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"ge\\\">\\r\\n        <ion-label><span class=\\\"flag-icon flag-icon-ge\\\"></span></ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label>Datum</ion-label>\\r\\n      <ion-datetime displayFormat=\\\"YYYY-MM-DD\\\" placeholder=\\\"Selecteer datum\\\" (ionChange)=\\\"fixDatum()\\\"\\r\\n                    [(ngModel)]=\\\"optreden.datum\\\"></ion-datetime>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Tijd</ion-label>\\r\\n      <ion-datetime displayFormat=\\\"HH:mm\\\" placeholder=\\\"Selecteer tijd\\\" [(ngModel)]=\\\"optreden.tijd\\\"></ion-datetime>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Buiten</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"optreden.isBuiten\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Sociaal</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"optreden.isSociaal\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Openbaar</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"optreden.isOpenbaar\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Besloten</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"optreden.isBesloten\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Wild Op!</ion-label>\\r\\n      <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"optreden.isWildOp\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"stacked\\\">Aantal bezoekers</ion-label>\\r\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"optreden.aantalBezoekers\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"stacked\\\">Gastdirigent</ion-label>\\r\\n      <ion-input [(ngModel)]=\\\"optreden.gastdirigent\\\" placeholder=\\\"Gastdirigent\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"stacked\\\">Opmerkingen</ion-label>\\r\\n      <ion-input [(ngModel)]=\\\"optreden.opmerkingen\\\" placeholder=\\\"Opmerkingen\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <h2>Repertoire</h2>\\r\\n    <ion-item *ngFor=\\\"let stuk of stukken\\\">\\r\\n      <ion-label>\\r\\n        <strong>{{stuk.titel}}</strong><br/>\\r\\n        {{stuk.componist}}\\r\\n      </ion-label>\\r\\n      <ion-chip outline slot=\\\"end\\\">\\r\\n        <ion-label>{{stuk.code}}</ion-label>\\r\\n      </ion-chip>\\r\\n      <ion-checkbox slot=\\\"end\\\" checked=\\\"{{containsStuk(stuk)}}\\\" (ionChange)=\\\"updateStuk(stuk, $event)\\\"></ion-checkbox>\\r\\n    </ion-item>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL29wdHJlZGVuL29wdHJlZGVuLnBhZ2Uuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {DatabaseService, Optreden, Stuk} from '../../services/database.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastController} from '@ionic/angular';\r\nimport {SharedModule} from '../../shared/shared.module';\r\n\r\n@Component({\r\n  selector: 'app-optreden',\r\n  templateUrl: './optreden.page.html',\r\n  styleUrls: ['./optreden.page.scss'],\r\n})\r\nexport class OptredenPage implements OnInit {\r\n  optreden: Optreden = null;\r\n  stukken: Stuk[] = [];\r\n\r\n  constructor(private route: ActivatedRoute, private db: DatabaseService, private router: Router, private toast: ToastController) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.db.getDatabaseState().subscribe(rdy => {\r\n      if (rdy) {\r\n        this.route.paramMap.subscribe(params => {\r\n          const optredenId = params.get('id');\r\n\r\n          if (optredenId === '-1') {\r\n            this.optreden = {\r\n              id: -1,\r\n              locatie: '',\r\n              plaats: '',\r\n              landCode: 'nl',\r\n              longitude: 0,\r\n              latitude: 0,\r\n              datum: SharedModule.getCurrentDatum(),\r\n              tijd: SharedModule.getCurrentTijd(),\r\n              isBuiten: false,\r\n              isSociaal: false,\r\n              isOpenbaar: false,\r\n              isBesloten: false,\r\n              isWildOp: false,\r\n              aantalBezoekers: 0,\r\n              gastdirigent: '',\r\n              opmerkingen: '',\r\n              stukken: [],\r\n            };\r\n            return;\r\n          }\r\n          this.db.getOptreden(optredenId).then(data => {\r\n            this.optreden = data;\r\n          });\r\n        });\r\n\r\n        this.db.getStukken().subscribe(stukken => {\r\n          this.stukken = stukken;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  containsStuk(stuk) {\r\n    return this.optreden.stukken.filter(o => o.id === stuk.id).length > 0;\r\n  }\r\n\r\n  updateStuk(stuk, event) {\r\n    if (event.detail.checked) {\r\n      if (!this.containsStuk(stuk)) {\r\n        this.optreden.stukken.push(stuk);\r\n      }\r\n    } else {\r\n      if (this.containsStuk(stuk)) {\r\n        this.optreden.stukken = this.optreden.stukken.filter(o => o.id !== stuk.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  fixDatum() {\r\n    this.optreden.datum = this.optreden.datum.split('T')[0];\r\n  }\r\n\r\n  delete() {\r\n    if (this.optreden !== null && this.optreden.id === -1) {\r\n      this.router.navigateByUrl('/tabs/optredens');\r\n      return;\r\n    }\r\n\r\n    this.db.deleteOptreden(this.optreden.id).then(() => {\r\n      this.router.navigateByUrl('/tabs/optredens');\r\n    });\r\n  }\r\n\r\n  update() {\r\n    if (this.optreden !== null && this.optreden.id === -1) {\r\n      this.db.addOptreden(this.optreden).then(async (res) => {\r\n        const toast = await this.toast.create({\r\n          message: 'Optreden aangemaakt',\r\n          duration: 1000\r\n        });\r\n        toast.present();\r\n        this.router.navigateByUrl('/tabs/optredens');\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.db.updateOptreden(this.optreden).then(async (res) => {\r\n      const toast = await this.toast.create({\r\n        message: 'Optreden bijgewerkt',\r\n        duration: 1000\r\n      });\r\n      toast.present();\r\n      this.router.navigateByUrl('/tabs/optredens');\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}