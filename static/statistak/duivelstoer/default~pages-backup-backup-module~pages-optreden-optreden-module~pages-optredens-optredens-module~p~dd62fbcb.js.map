{"version":3,"sources":["webpack:///./src/app/services/database.service.ts","webpack:///./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"default~pages-backup-backup-module~pages-optreden-optreden-module~pages-optredens-optredens-module~p~dd62fbcb.js","sourcesContent":["import {Platform} from '@ionic/angular';\r\nimport {Injectable} from '@angular/core';\r\nimport {SQLitePorter} from '@ionic-native/sqlite-porter/ngx';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {SQLite, SQLiteObject} from '@ionic-native/sqlite/ngx';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport databaseDefinition from './databaseDefinition';\r\n\r\nexport interface Optreden {\r\n  id: number;\r\n  locatie: string;\r\n  plaats: string;\r\n  landCode: string;\r\n  longitude: number;\r\n  latitude: number;\r\n  datum: string;\r\n  tijd: string;\r\n  isBuiten: boolean;\r\n  isSociaal: boolean;\r\n  isOpenbaar: boolean;\r\n  isBesloten: boolean;\r\n  isWildOp: boolean;\r\n  aantalBezoekers: number;\r\n  stukken: Stuk[];\r\n}\r\n\r\nexport interface Stuk {\r\n  id: number;\r\n  titel: string;\r\n  componist: string;\r\n  code: string;\r\n  metSolistKlarinet: boolean;\r\n  metSolistZang: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatabaseService {\r\n  private database: SQLiteObject;\r\n  private dbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  optredens = new BehaviorSubject([]);\r\n  stukken = new BehaviorSubject([]);\r\n\r\n  constructor(private plt: Platform, private sqlitePorter: SQLitePorter, private sqlite: SQLite, private http: HttpClient) {\r\n    this.plt.ready().then(() => {\r\n      this.sqlite.create({\r\n        name: 'statistak.db',\r\n        location: 'default'\r\n      })\r\n        .then((db: SQLiteObject) => {\r\n          this.database = db;\r\n          this.seedDatabase();\r\n        });\r\n    });\r\n  }\r\n\r\n  seedDatabase() {\r\n    this.http.get('assets/seed.sql', {responseType: 'text'})\r\n      .subscribe(sql => {\r\n        this.sqlitePorter.importSqlToDb(this.database, sql)\r\n          .then(_ => {\r\n            this.loadOptredens();\r\n            this.loadStukken();\r\n            this.dbReady.next(true);\r\n          })\r\n          .catch(e => console.error(e));\r\n      });\r\n  }\r\n\r\n  importDatabase(sql) {\r\n    return this.sqlitePorter.importSqlToDb(this.database, sql).finally(() => {\r\n      this.loadOptredens();\r\n      this.loadStukken();\r\n    });\r\n  }\r\n\r\n  exportDatabase() {\r\n    return this.sqlitePorter.exportDbToSql(this.database);\r\n  }\r\n\r\n  getDatabaseState() {\r\n    return this.dbReady.asObservable();\r\n  }\r\n\r\n  getOptredens(): Observable<Optreden[]> {\r\n    return this.optredens.asObservable();\r\n  }\r\n\r\n  getStukken(): Observable<Stuk[]> {\r\n    return this.stukken.asObservable();\r\n  }\r\n\r\n  loadOptredens() {\r\n    return this.database.executeSql('SELECT * FROM optreden', []).then(async data => {\r\n      const optredens: Optreden[] = [];\r\n\r\n      if (data.rows.length > 0) {\r\n        for (let i = 0; i < data.rows.length; i++) {\r\n          const stukken = await this.getOptredenRepertoire(data.rows.item(i).id);\r\n          stukken.sort(SharedModule.dynamicSort('code'));\r\n\r\n          optredens.push({\r\n            id: data.rows.item(i).id,\r\n            locatie: data.rows.item(i).locatie,\r\n            plaats: data.rows.item(i).plaats,\r\n            landCode: data.rows.item(i).landCode,\r\n            longitude: data.rows.item(i).longitude,\r\n            latitude: data.rows.item(i).latitude,\r\n            datum: data.rows.item(i).datum,\r\n            tijd: data.rows.item(i).tijd,\r\n            isBuiten: data.rows.item(i).isBuiten === 1,\r\n            isSociaal: data.rows.item(i).isSociaal === 1,\r\n            isOpenbaar: data.rows.item(i).isOpenbaar === 1,\r\n            isBesloten: data.rows.item(i).isBesloten === 1,\r\n            isWildOp: data.rows.item(i).isWildOp === 1,\r\n            aantalBezoekers: data.rows.item(i).aantalBezoekers,\r\n            stukken,\r\n          });\r\n        }\r\n      }\r\n\r\n      this.optredens.next(optredens);\r\n    });\r\n  }\r\n\r\n  addOptreden(optreden: Optreden) {\r\n    const data = [\r\n      optreden.locatie,\r\n      optreden.plaats,\r\n      optreden.landCode,\r\n      optreden.longitude,\r\n      optreden.latitude,\r\n      optreden.datum,\r\n      optreden.tijd,\r\n      optreden.isBuiten ? 1 : 0,\r\n      optreden.isSociaal ? 1 : 0,\r\n      optreden.isOpenbaar ? 1 : 0,\r\n      optreden.isBesloten ? 1 : 0,\r\n      optreden.isWildOp ? 1 : 0,\r\n      optreden.aantalBezoekers,\r\n    ];\r\n    return this.database.executeSql('INSERT INTO optreden (locatie, plaats, landCode, longitude, latitude, datum, tijd, ' +\r\n      'isBuiten, isSociaal, isOpenbaar, isBesloten, isWildOp, aantalBezoekers) ' +\r\n      'VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', data).then(async () => {\r\n\r\n      if (optreden.stukken.length > 0) {\r\n        const stukString = optreden.stukken.map(stuk => `(${optreden.id}, ${stuk.id})`).join(', ');\r\n\r\n        await this.database.executeSql(`INSERT INTO optreden_repertoire (optredenId, stukId) VALUES ${stukString}`);\r\n      }\r\n      this.loadOptredens();\r\n    });\r\n  }\r\n\r\n  getOptreden(id): Promise<Optreden> {\r\n    return this.database.executeSql('SELECT * FROM optreden WHERE id = ?', [id]).then(async data => {\r\n      const stukken = await this.getOptredenRepertoire(data.rows.item(0).id);\r\n      stukken.sort(SharedModule.dynamicSort('code'));\r\n\r\n      return {\r\n        id: data.rows.item(0).id,\r\n        locatie: data.rows.item(0).locatie,\r\n        plaats: data.rows.item(0).plaats,\r\n        landCode: data.rows.item(0).landCode,\r\n        longitude: data.rows.item(0).longitude,\r\n        latitude: data.rows.item(0).latitude,\r\n        datum: data.rows.item(0).datum,\r\n        tijd: data.rows.item(0).tijd,\r\n        isBuiten: data.rows.item(0).isBuiten === 1,\r\n        isSociaal: data.rows.item(0).isSociaal === 1,\r\n        isOpenbaar: data.rows.item(0).isOpenbaar === 1,\r\n        isBesloten: data.rows.item(0).isBesloten === 1,\r\n        isWildOp: data.rows.item(0).isWildOp === 1,\r\n        aantalBezoekers: data.rows.item(0).aantalBezoekers,\r\n        stukken,\r\n      };\r\n    });\r\n  }\r\n\r\n  deleteOptreden(id) {\r\n    return this.database.executeSql('DELETE FROM optreden WHERE id = ?', [id]).then(_ => {\r\n      this.loadOptredens();\r\n    });\r\n  }\r\n\r\n  updateOptreden(optreden: Optreden) {\r\n    const data = [\r\n      optreden.locatie,\r\n      optreden.plaats,\r\n      optreden.landCode,\r\n      optreden.longitude,\r\n      optreden.latitude,\r\n      optreden.datum,\r\n      optreden.tijd,\r\n      optreden.isBuiten ? 1 : 0,\r\n      optreden.isSociaal ? 1 : 0,\r\n      optreden.isOpenbaar ? 1 : 0,\r\n      optreden.isBesloten ? 1 : 0,\r\n      optreden.isWildOp ? 1 : 0,\r\n      optreden.aantalBezoekers,\r\n    ];\r\n    return this.database.executeSql(`\r\n    UPDATE optreden SET locatie = ?, plaats = ?, landCode = ?, longitude = ?, latitude = ?, datum = ?, tijd = ?,\r\n      isBuiten = ?, isSociaal = ?, isOpenbaar = ?, isBesloten = ?, isWildOp = ?, aantalBezoekers = ?\r\n      WHERE id = ${optreden.id}`, data).then(async () => {\r\n      if (optreden.stukken.length > 0) {\r\n        const stukString = optreden.stukken.map(stuk => `(${optreden.id}, ${stuk.id})`).join(', ');\r\n\r\n        try {\r\n          await this.database.executeSql(`DELETE FROM optreden_repertoire WHERE optredenId=${optreden.id}`);\r\n        } catch (e) {\r\n          if (!e.hasOwnProperty('rows')) {\r\n            console.error(e);\r\n          }\r\n        }\r\n\r\n        try {\r\n          await this.database.executeSql(`INSERT INTO optreden_repertoire (optredenId, stukId) VALUES ${stukString}`);\r\n        } catch (e) {\r\n          if (!e.hasOwnProperty('rows')) {\r\n            console.error(e);\r\n          }\r\n        }\r\n\r\n      }\r\n      this.loadOptredens();\r\n    });\r\n  }\r\n\r\n  loadStukken() {\r\n    return this.database.executeSql('SELECT * FROM stuk', []).then(data => {\r\n      const stukken: Stuk[] = [];\r\n\r\n      if (data.rows.length > 0) {\r\n        for (let i = 0; i < data.rows.length; i++) {\r\n          stukken.push({\r\n            id: data.rows.item(i).id,\r\n            titel: data.rows.item(i).titel,\r\n            componist: data.rows.item(i).componist,\r\n            code: data.rows.item(i).code,\r\n            metSolistKlarinet: data.rows.item(i).metSolistKlarinet === 1,\r\n            metSolistZang: data.rows.item(i).metSolistZang === 1,\r\n          });\r\n        }\r\n      }\r\n\r\n      stukken.sort(SharedModule.dynamicSort('code'));\r\n\r\n      this.stukken.next(stukken);\r\n    });\r\n  }\r\n\r\n  addStuk(stuk: Stuk) {\r\n    const data = [\r\n      stuk.titel,\r\n      stuk.componist,\r\n      stuk.code,\r\n      stuk.metSolistKlarinet ? 1 : 0,\r\n      stuk.metSolistZang ? 1 : 0,\r\n    ];\r\n    return this.database.executeSql('INSERT INTO stuk (titel, componist, code, metSolistKlarinet, metSolistZang) VALUES (?, ?, ?, ?, ?)', data).then(() => {\r\n      this.loadStukken();\r\n    });\r\n  }\r\n\r\n  getStuk(id): Promise<Stuk> {\r\n    return this.database.executeSql('SELECT * FROM stuk WHERE id = ?', [id]).then(data => {\r\n      return {\r\n        id: data.rows.item(0).id,\r\n        titel: data.rows.item(0).titel,\r\n        componist: data.rows.item(0).componist,\r\n        code: data.rows.item(0).code,\r\n        metSolistKlarinet: data.rows.item(0).metSolistKlarinet === 1,\r\n        metSolistZang: data.rows.item(0).metSolistZang === 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  getOptredenRepertoire(optredenId): Promise<Stuk[]> {\r\n    return this.database.executeSql(`\r\n    SELECT * FROM optreden_repertoire JOIN stuk ON optreden_repertoire.stukId = stuk.id\r\n    WHERE optreden_repertoire.optredenId = ?`, [optredenId]).then(data => {\r\n      const stukken: Stuk[] = [];\r\n\r\n      if (data.rows.length > 0) {\r\n        for (let i = 0; i < data.rows.length; i++) {\r\n          stukken.push({\r\n            id: data.rows.item(i).id,\r\n            titel: data.rows.item(i).titel,\r\n            componist: data.rows.item(i).componist,\r\n            code: data.rows.item(i).code,\r\n            metSolistKlarinet: data.rows.item(i).metSolistKlarinet === 1,\r\n            metSolistZang: data.rows.item(i).metSolistZang === 1,\r\n          });\r\n        }\r\n      }\r\n\r\n      stukken.sort(SharedModule.dynamicSort('code'));\r\n\r\n      return stukken;\r\n    });\r\n  }\r\n\r\n  deleteStuk(id) {\r\n    return this.database.executeSql('DELETE FROM stuk WHERE id = ?', [id]).then(_ => {\r\n      this.loadStukken();\r\n      this.loadOptredens();\r\n    });\r\n  }\r\n\r\n  updateStuk(stuk: Stuk) {\r\n    const data = [\r\n      stuk.titel,\r\n      stuk.componist,\r\n      stuk.code,\r\n      stuk.metSolistKlarinet ? 1 : 0,\r\n      stuk.metSolistZang ? 1 : 0,\r\n    ];\r\n    return this.database.executeSql(`UPDATE stuk SET titel = ?, componist = ?, code = ?, metSolistKlarinet = ?, metSolistZang = ?\r\n    WHERE id = ${stuk.id}`, data).then(() => {\r\n      this.loadStukken();\r\n      this.loadOptredens();\r\n    });\r\n  }\r\n\r\n  getNumOptredensPerDag() {\r\n    return this.database.executeSql(`SELECT count(*) AS numOptredens, datum FROM optreden GROUP BY datum`).catch(data => {\r\n      if (!data.hasOwnProperty('rows')) {\r\n        console.error('Real error');\r\n        return;\r\n      }\r\n      const dagen = [];\r\n      for (let i = 0; i < data.rows.length; i++) {\r\n        dagen.push({\r\n          name: new Date(data.rows.item(i).datum),\r\n          value: data.rows.item(i).numOptredens,\r\n        });\r\n      }\r\n      return dagen;\r\n    });\r\n  }\r\n\r\n  getAverageOptredensPerDag() {\r\n    return this.getNumOptredensPerDag().then(data => {\r\n      const average = arr => arr.reduce((p, c) => p + c, 0) / arr.length;\r\n\r\n      return average(data.map(o => o.value));\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule {\n  static dynamicSort(property) {\n    let sortOrder = 1;\n    if (property[0] === '-') {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return (a, b) => {\n      const result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n      return result * sortOrder;\n    };\n  }\n\n  static getCurrentDatum() {\n    const today = new Date();\n    const dd = String(today.getDate()).padStart(2, '0');\n    const mm = String(today.getMonth() + 1).padStart(2, '0');\n    const yyyy = today.getFullYear();\n\n    return `${yyyy}-${mm}-${dd}`;\n  }\n\n  static getCurrentTijd() {\n    const today = new Date();\n    const hh = String(today.getHours()).padStart(2, '0');\n    const mm = String(today.getMinutes()).padStart(2, '0');\n\n    return `${hh}:${mm}`;\n  }\n}\n"],"sourceRoot":""}