{"version":3,"sources":["webpack:///./src/app/pages/charts/charts.module.ts","webpack:///./src/app/pages/charts/charts.page.html","webpack:///./src/app/pages/charts/charts.page.scss","webpack:///./src/app/pages/charts/charts.page.ts"],"names":[],"mappings":"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","file":"pages-charts-charts-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {ChartsPage} from './charts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChartsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChartsPage]\n})\nexport class ChartsPageModule {\n}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"kartuli\\\">\\n    <ion-title>De Ricciotti Charts ‚ú®üèÜü•á</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-segment [ngModel]=\\\"sortBy\\\" color=\\\"success\\\" value=\\\"optredens\\\" (ionChange)=\\\"sortCharts($event)\\\">\\n    <ion-segment-button value=\\\"optredens\\\">\\n      <ion-label>Optredens</ion-label>\\n      <ion-icon name=\\\"compass\\\"></ion-icon>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"bezoekers\\\">\\n      <ion-label>Bezoekers</ion-label>\\n      <ion-icon name=\\\"heart\\\"></ion-icon>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <ion-segment [ngModel]=\\\"mode\\\" value=\\\"globaal\\\" (ionChange)=\\\"updateCharts($event)\\\">\\n    <ion-segment-button value=\\\"globaal\\\">Globaal</ion-segment-button>\\n    <ion-segment-button value=\\\"nl\\\"><span class=\\\"flag-icon flag-icon-nl\\\"></span></ion-segment-button>\\n    <ion-segment-button value=\\\"ge\\\"><span class=\\\"flag-icon flag-icon-ge\\\"></span></ion-segment-button>\\n  </ion-segment>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-list>\\n          <ion-item *ngFor=\\\"let stuk of ricciottiCharts; let i = index\\\">\\n            <ion-label>\\n              <strong>{{stuk.titel}}</strong><br/>\\n              {{stuk.componist}}\\n            </ion-label>\\n            <ion-badge slot=\\\"start\\\" color=\\\"primary\\\">{{i + 1}}</ion-badge>\\n            <ion-chip color=\\\"success\\\" slot=\\\"end\\\">\\n              <ion-label>{{stuk[this.sortBy]}}</ion-label>\\n            </ion-chip>\\n          </ion-item>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJ0cy9jaGFydHMucGFnZS5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {DatabaseService, Stuk} from '../../services/database.service';\nimport {SharedModule} from '../../shared/shared.module';\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.page.html',\n  styleUrls: ['./charts.page.scss'],\n})\nexport class ChartsPage implements OnInit {\n\n  ricciottiCharts: Stuk[] = [];\n  ricciottiChartsGlobaal: Stuk[] = [];\n  ricciottiChartsNL: Stuk[] = [];\n  ricciottiChartsGE: Stuk[] = [];\n  mode = 'globaal';\n  sortBy = 'optredens';\n\n  constructor(private databaseService: DatabaseService) {\n  }\n\n  ngOnInit() {\n    this.databaseService.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n        this.databaseService.getOptredens().subscribe(optredens => {\n          this.databaseService.getRicciottiCharts().then(data => {\n            this.ricciottiChartsGlobaal = data;\n            if (this.mode === 'globaal') {\n              this.ricciottiCharts = this.ricciottiChartsGlobaal;\n              this.sortByCountType(this.sortBy);\n            }\n          });\n          this.databaseService.getRicciottiCharts('nl').then(data => {\n            this.ricciottiChartsNL = data;\n            if (this.mode === 'nl') {\n              this.ricciottiCharts = this.ricciottiChartsNL;\n              this.sortByCountType(this.sortBy);\n            }\n          });\n          this.databaseService.getRicciottiCharts('ge').then(data => {\n            this.ricciottiChartsGE = data;\n            if (this.mode === 'ge') {\n              this.ricciottiCharts = this.ricciottiChartsGE;\n              this.sortByCountType(this.sortBy);\n            }\n          });\n        });\n      }\n    });\n  }\n\n  updateCharts(event) {\n    if (event.target.value === 'globaal') {\n      this.ricciottiCharts = this.ricciottiChartsGlobaal;\n    } else if (event.target.value === 'nl') {\n      this.ricciottiCharts = this.ricciottiChartsNL;\n    } else if (event.target.value === 'ge') {\n      this.ricciottiCharts = this.ricciottiChartsGE;\n    }\n    this.sortByCountType(this.sortBy);\n    this.mode = event.target.value;\n  }\n\n  sortByCountType(type) {\n    this.ricciottiCharts.sort(SharedModule.dynamicSort('-' + type));\n    this.ricciottiCharts = [...this.ricciottiCharts];\n  }\n\n  sortCharts(event) {\n    if (event.target.value === 'optredens') {\n      this.sortByCountType('optredens');\n    } else if (event.target.value === 'bezoekers') {\n      this.sortByCountType('bezoekers');\n    }\n    this.sortBy = event.target.value;\n  }\n}\n"],"sourceRoot":""}